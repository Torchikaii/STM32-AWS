name: STM32 Code Generation

on:
  push:
    branches:
      - main  # Change this to your default branch if different
  #      - doc/1-plan
  pull_request:
    branches:
      - main  # Change this to your default branch if different

  workflow_dispatch:  # Allows manual triggering of the workflow
    inputs:
      debug:
        description: 'Enable debugging'
        required: false
        default: 'false'
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DEBUG: ${{ github.event.inputs.debug }}

    container:
#      image: ghcr.io/torchikaii/stm32-aws/cubemx-runner:latest
      image: ghcr.io/torchikaii/stm32-aws/cubemx-runner:dev
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Create generate_script.txt
        shell: bash
        env:
          ST_CUBE_EMAIL: ${{ secrets.ACCOUNT_EMAIL }}
          ST_CUBE_PASSWORD: ${{ secrets.ACCOUNT_PASSWORD }}
        run: |
          echo "login \"${ST_CUBE_EMAIL}\" \"${ST_CUBE_PASSWORD}\" y" > generate_script.txt
          echo "swmgr refresh" >> generate_script.txt
          echo "swmgr install stm32cube_f4_1.28.2 ask" >> generate_script.txt
          echo "config load \"/__w/STM32-AWS/STM32-AWS/Initial_project.ioc\"" >> generate_script.txt
          echo "project toolchain \"Makefile\"" >> generate_script.txt
          echo "project path \"/__w/STM32-AWS/STM32-AWS\"" >> generate_script.txt
          echo "project name \"Initial_project\"" >> generate_script.txt
          echo "project generateunderroot 1" >> generate_script.txt
          echo "project generate" >> generate_script.txt
          echo "exit" >> generate_script.txt
      - run: cat generate_script.txt

      - run: echo $PWD

      - name: Run STM32CubeMX
        continue-on-error: true
        id: generate
        timeout-minutes: 5
        run: |
          SCRIPT_PATH="$(realpath "generate_script.txt")"
          echo "Using SCRIPT_PATH=$SCRIPT_PATH"
          echo "Using HOME=$HOME"
          echo "Using PWD=$PWD"
          xvfb-run -a -s "-screen 0 1024x768x24" /opt/STM32CubeMX/STM32CubeMX -q "$SCRIPT_PATH"


      # Install ARM GCC + make
      - name: Install ARM GCC toolchain
        run: |
          apt-get update
          apt-get install -y \
            build-essential \
            gcc-arm-none-eabi \
            binutils-arm-none-eabi \
            libnewlib-arm-none-eabi \
            make

      # Build (CubeMX Makefile at repo root)
      - name: Build firmware
        id: build
        if: steps.generate.outcome == 'success'
        working-directory: /__w/STM32-AWS/STM32-AWS/Initial_project
        continue-on-error: true
        env:
          MAKEFLAGS: -j$(nproc)
        run: |
          make
          arm-none-eabi-size build/*.elf || true

      # (Optional) Upload build outputs
      - name: Upload firmware artifacts
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          retention-days: 3
          path: |
            build/**/*.elf
            build/**/*.bin
            build/**/*.hex
            build/**/*.map

      - name: Setup tmate session for debugging
        if: env.DEBUG == 'true'
        # if: always()
        uses: mxschmitt/action-tmate@v3